html{-webkit-box-sizing:border-box;box-sizing:border-box}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}body{position:relative;margin:0;font-size:13px;font-family:"Inter-Regular"}h1,h2,h3,h4,h5,h6,p,ul{margin:0;padding:0}picture{display:inline-block;width:100%;height:100%}.btn-reset{border:0;background:0 0;cursor:pointer;padding:0;outline:0}ul{list-style:none}a{text-decoration:none}input,select,textarea{-webkit-appearance:none}input{all:unset}textarea{border:0;overflow:auto;outline:0;-webkit-box-shadow:none;box-shadow:none;font-family:inherit;font-size:inherit}@font-face{font-family:"Inter-Bold";font-style:normal;font-weight:700;src:url(../fonts/Inter-Bold.woff2) format("woff2"),url(../fonts/Inter-Bold.woff) format("woff")}@font-face{font-family:"Inter-Medium";font-style:normal;font-weight:500;src:url(../fonts/Inter-Medium.woff2) format("woff2"),url(../fonts/Inter-Medium.woff) format("woff")}@font-face{font-family:"Inter-Regular";font-style:normal;font-weight:400;src:url(../fonts/Inter-Regular.woff2) format("woff2"),url(../fonts/Inter-Regular.woff) format("woff")}.text,.title{font-family:"Inter-Bold";color:#2c2c2c;font-size:16px;font-weight:700}.text{font-family:"Inter-Medium";font-size:13px;line-height:16px;font-weight:500}section{padding:50px}.inner{padding:30px 0}.colors__inner{padding:30px 0;width:500px;display:-webkit-box;display:-ms-flexbox;display:flex}.colors__title{margin-bottom:36px}.colors__column{margin-right:70px}.colors__item{width:41px;height:41px;border-radius:100%;margin-bottom:20px}.colors__item._black{background-color:#2c2c2c}.colors__item._grey{background-color:rgba(44,44,44,.5)}.colors__item._blue{background-color:#18a0fb}.colors__item._red{background-color:#ff3e1d}.colors__item._green{background-color:#00d200}.colors__item._yelow{background-color:#ffd422}.colors__item._form-base{border:1px solid rgba(44,44,44,.5)}.colors__item._form-accent{border:1px solid #18a0fb}.colors__item._form-error{border:1px solid #ff3e1d}.colors__item._elevation{border:1px solid rgba(224,224,224,.15)}.colors__item._elevation._1{-webkit-box-shadow:0 1px 2px rgba(0,0,0,.1);box-shadow:0 1px 2px rgba(0,0,0,.1)}.colors__item._elevation._2{-webkit-box-shadow:0 2px 3px rgba(0,0,0,.1);box-shadow:0 2px 3px rgba(0,0,0,.1)}.colors__item._elevation._3{-webkit-box-shadow:0 2px 7px rgba(0,0,0,.12);box-shadow:0 2px 7px rgba(0,0,0,.12)}.colors__item._elevation._4{-webkit-box-shadow:0 10px 23px rgba(0,0,0,.12);box-shadow:0 10px 23px rgba(0,0,0,.12)}.input__withLabel,.input__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.input__wrapper{margin-bottom:30px}.input__withLabel{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;max-width:300px;margin-right:70px}.input__noLabel{margin-right:70px}.input__icons,.input__noLabel{padding-top:23px}.input__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:260px;margin-bottom:24px}.input__item input{padding:10px 12px;border:1px solid #e0e0e0;border-radius:4px;color:#2c2c2c}.input__item input::-webkit-input-placeholder,.textarea__item textarea::-webkit-input-placeholder{font-family:"Inter-Regular";font-weight:400;font-size:13px;color:#2c2c2c;opacity:.5}.input__item input::-moz-placeholder,.textarea__item textarea::-moz-placeholder{font-family:"Inter-Regular";font-weight:400;font-size:13px;color:#2c2c2c;opacity:.5}.input__item input:-ms-input-placeholder,.textarea__item textarea:-ms-input-placeholder{font-family:"Inter-Regular";font-weight:400;font-size:13px;color:#2c2c2c;opacity:.5}.input__item input::-ms-input-placeholder,.textarea__item textarea::-ms-input-placeholder{font-family:"Inter-Regular";font-weight:400;font-size:13px;color:#2c2c2c;opacity:.5}.input__item input::placeholder,.textarea__item textarea::placeholder{font-family:"Inter-Regular";font-weight:400;font-size:13px;color:#2c2c2c;opacity:.5}.input__item input:focus,.textarea__item textarea:focus{border-color:#18a0fb}.input__item._error input,.textarea__item._error textarea{background:rgba(255,62,29,.06);border-color:#ff3e1d;opacity:1}.input__item._error input::-webkit-input-placeholder,.textarea__item._error textarea::-webkit-input-placeholder{color:#ff3e1d;opacity:1}.input__item._error input::-moz-placeholder,.textarea__item._error textarea::-moz-placeholder{color:#ff3e1d;opacity:1}.input__item._error input:-ms-input-placeholder,.textarea__item._error textarea:-ms-input-placeholder{color:#ff3e1d;opacity:1}.input__item._error input::-ms-input-placeholder,.textarea__item._error textarea::-ms-input-placeholder{color:#ff3e1d;opacity:1}.input__item._error input::placeholder,.textarea__item._error textarea::placeholder{color:#ff3e1d;opacity:1}.input__item._focused input{border-color:#18a0fb;opacity:1}.input__item._disabled input{background:rgba(224,224,224,.3)}.input__item._disabled .input__label{opacity:.4}.input__item._dots,.input__item._left,.input__item._right{position:relative}.input__item._dots span,.input__item._left svg{position:absolute;top:10px;left:12px;opacity:.5}.input__item._left input{padding-left:37px;-webkit-appearance:none}.input__item._right svg{position:absolute;top:10px;right:12px;opacity:.5}.input__item._right input{padding-right:37px}.input__item._dots input{padding-left:70px}.input__item._dots span{top:0;left:0;height:100%;width:60px;background:rgba(224,224,224,.3);text-align:center;padding-top:10px}.input__label,.select__label{margin-bottom:8px}.textarea__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:30px}.textarea__item textarea{padding:10px 16px;border:1px solid #e0e0e0;border-radius:4px;color:#2c2c2c}.textarea__item._error{margin-left:50px}.textarea__label{margin-bottom:8px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
